{"name": "test_put_livros_invalid_values[nome-256.characters_type_numbers-400_0]", "status": "broken", "statusDetails": {"message": "AttributeError: 'LogService' object has no attribute 'error'", "trace": "request = {'body': '{\"id\":4,\"nome\":\"11947496418364796321611232319226469311488221968433422729281222842646112967819617743676379898...-origin': '*', 'connection': 'close', 'content-length': '432', 'content-type': 'application/json; charset=utf-8', ...}}\ncode = 400\n\n    @staticmethod\n    def validate_status_code(request, code):\n        try:\n            LOG.log_info(f\"Status Code esperado: {code}\")\n            LOG.log_info(f\"Status Code recebido: {request['code']}\")\n>           assert request['code'] == code\nE           AssertionError\n\n../support/api_utils.py:12: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nfield = 'nome', value = '256.characters_type_numbers', code = 400\n\n    @pytest.mark.crud_livros\n    @pytest.mark.parametrize(\"field, value, code\", exemples_put_livraria_invalid_values)\n    def test_put_livros_invalid_values(field, value, code):\n        client = LivrariaClient()\n        client.set_base_url()\n        payload = payload_post_livros()\n        payload = Common.change_fields_payload(payload, field, value)\n        ApiUtils.payload_parse(payload)\n        response = client.put_livros(payload, 4)\n>       Common.validate_response(response, code)\n\ntest_put_livraria.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../clients/common.py:109: in validate_response\n    ApiUtils.validate_status_code(response, code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = {'body': '{\"id\":4,\"nome\":\"11947496418364796321611232319226469311488221968433422729281222842646112967819617743676379898...-origin': '*', 'connection': 'close', 'content-length': '432', 'content-type': 'application/json; charset=utf-8', ...}}\ncode = 400\n\n    @staticmethod\n    def validate_status_code(request, code):\n        try:\n            LOG.log_info(f\"Status Code esperado: {code}\")\n            LOG.log_info(f\"Status Code recebido: {request['code']}\")\n            assert request['code'] == code\n        except AssertionError:\n>           LOG.error(\"CÃ³digos Divergentes\")\nE           AttributeError: 'LogService' object has no attribute 'error'\n\n../support/api_utils.py:14: AttributeError"}, "attachments": [{"name": "stderr", "source": "1b854b57-ce55-4c56-88aa-a0361f5a2ba1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "field", "value": "'nome'"}, {"name": "value", "value": "'256.characters_type_numbers'"}, {"name": "code", "value": "400"}], "start": 1716304678060, "stop": 1716304678409, "uuid": "c3c7465d-53f0-4543-8874-7bb619319f1d", "historyId": "1a69e63e8b161b54a8d561b4a663bd16", "testCaseId": "54ca20992ca585b59fb467116eab9326", "fullName": "pytests.specs.test_put_livraria#test_put_livros_invalid_values", "labels": [{"name": "tag", "value": "crud_livros"}, {"name": "parentSuite", "value": "pytests.specs"}, {"name": "suite", "value": "test_put_livraria"}, {"name": "host", "value": "Priscila-Mayume.local"}, {"name": "thread", "value": "7625-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "pytests.specs.test_put_livraria"}]}
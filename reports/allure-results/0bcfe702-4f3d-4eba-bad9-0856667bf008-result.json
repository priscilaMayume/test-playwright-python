{"name": "test_put_id_livro_invalid[123-400]", "status": "broken", "statusDetails": {"message": "AttributeError: 'LogService' object has no attribute 'error'", "trace": "request = {'body': '{\"message\":\"Id do Livro não encontrado\"}', 'code': 404, 'headers': {'access-control-allow-origin': '*', 'connection': 'close', 'content-length': '41', 'content-type': 'application/json; charset=utf-8', ...}}\ncode = 400\n\n    @staticmethod\n    def validate_status_code(request, code):\n        try:\n            LOG.log_info(f\"Status Code esperado: {code}\")\n            LOG.log_info(f\"Status Code recebido: {request['code']}\")\n>           assert request['code'] == code\nE           AssertionError\n\n../support/api_utils.py:12: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nvalue = '123', code = 400\n\n    @pytest.mark.crud_livros\n    @pytest.mark.parametrize(\"value, code\", exemples_put_id_livraria_invalid_values)\n    def test_put_id_livro_invalid(value, code):\n        client = LivrariaClient()\n        client.set_base_url()\n        payload = payload_post_livros()\n        values_change = Common.values_change(value)\n        response = client.put_livros(payload, values_change)\n>       Common.validate_response(response, code)\n\ntest_put_livraria.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../clients/common.py:109: in validate_response\n    ApiUtils.validate_status_code(response, code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = {'body': '{\"message\":\"Id do Livro não encontrado\"}', 'code': 404, 'headers': {'access-control-allow-origin': '*', 'connection': 'close', 'content-length': '41', 'content-type': 'application/json; charset=utf-8', ...}}\ncode = 400\n\n    @staticmethod\n    def validate_status_code(request, code):\n        try:\n            LOG.log_info(f\"Status Code esperado: {code}\")\n            LOG.log_info(f\"Status Code recebido: {request['code']}\")\n            assert request['code'] == code\n        except AssertionError:\n>           LOG.error(\"Códigos Divergentes\")\nE           AttributeError: 'LogService' object has no attribute 'error'\n\n../support/api_utils.py:14: AttributeError"}, "attachments": [{"name": "stderr", "source": "c58cedee-d01a-4d19-a746-03a5d5d04610-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "value", "value": "'123'"}, {"name": "code", "value": "400"}], "start": 1716304694993, "stop": 1716304695357, "uuid": "7f221ed2-58f8-4ccf-9419-3f2509a5d2c2", "historyId": "a3303a974c93ff606e0159a5a329a3b4", "testCaseId": "708ab504b888af7e4bf0af6508c205c4", "fullName": "pytests.specs.test_put_livraria#test_put_id_livro_invalid", "labels": [{"name": "tag", "value": "crud_livros"}, {"name": "parentSuite", "value": "pytests.specs"}, {"name": "suite", "value": "test_put_livraria"}, {"name": "host", "value": "Priscila-Mayume.local"}, {"name": "thread", "value": "7625-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "pytests.specs.test_put_livraria"}]}